#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module WiMP
  module Gen
    module AlbumOrderBy
      POPULARITY = 1
      POPULARITY_THIS_WEEK = 2
      ALBUM_NAME = 3
      ARTIST_NAME = 4
      RELEASE_DATE = 5
      VALUE_MAP = {1 => "POPULARITY", 2 => "POPULARITY_THIS_WEEK", 3 => "ALBUM_NAME", 4 => "ARTIST_NAME", 5 => "RELEASE_DATE"}
      VALID_VALUES = Set.new([POPULARITY, POPULARITY_THIS_WEEK, ALBUM_NAME, ARTIST_NAME, RELEASE_DATE]).freeze
    end

    module PlaylistType
      PRIVATE = 1
      EDITORIAL = 2
      ARTIST = 3
      USER = 4
      RADIO = 5
      VALUE_MAP = {1 => "PRIVATE", 2 => "EDITORIAL", 3 => "ARTIST", 4 => "USER", 5 => "RADIO"}
      VALID_VALUES = Set.new([PRIVATE, EDITORIAL, ARTIST, USER, RADIO]).freeze
    end

    module PrivacyLevel
      ALL = 1
      PUBLIC = 2
      FRIENDS = 3
      VALUE_MAP = {1 => "ALL", 2 => "PUBLIC", 3 => "FRIENDS"}
      VALID_VALUES = Set.new([ALL, PUBLIC, FRIENDS]).freeze
    end

    module FavoriteOrderBy
      NAME = 1
      ARTIST_NAME = 2
      DATE_ADDED = 3
      INDEX = 4
      VALUE_MAP = {1 => "NAME", 2 => "ARTIST_NAME", 3 => "DATE_ADDED", 4 => "INDEX"}
      VALID_VALUES = Set.new([NAME, ARTIST_NAME, DATE_ADDED, INDEX]).freeze
    end

    module AlbumFilter
      ALL = 1
      ALLBUTSINGLES = 2
      ONLYEPS = 3
      ONLYSINGLES = 4
      ONLYALBUMS = 5
      ALLBUTALBUMS = 6
      ONLYOWNALBUMS = 7
      ALLBUTOWN = 8
      ONLYOWNSINGLESANDEPS = 9
      VALUE_MAP = {1 => "ALL", 2 => "ALLBUTSINGLES", 3 => "ONLYEPS", 4 => "ONLYSINGLES", 5 => "ONLYALBUMS", 6 => "ALLBUTALBUMS", 7 => "ONLYOWNALBUMS", 8 => "ALLBUTOWN", 9 => "ONLYOWNSINGLESANDEPS"}
      VALID_VALUES = Set.new([ALL, ALLBUTSINGLES, ONLYEPS, ONLYSINGLES, ONLYALBUMS, ALLBUTALBUMS, ONLYOWNALBUMS, ALLBUTOWN, ONLYOWNSINGLESANDEPS]).freeze
    end

    class Profile
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PROFILEID = 1
      USERID = 2
      PHONENUMBER = 3
      REGISTRATIONDATE = 4
      SESSIONID = 5
      MOBILEOPERATOR = 6
      SUBSCRIPTIONSTATUS = 7
      CHANNELID = 8
      CLIENTAUTHORIZEDFOROFFLINECONTENT = 9
      VALIDFORSTREAMING = 10
      SUBSCRIPTIONENDDATE = 11
      PLAYLISTSHARINGLEVEL = 12
      ARTISTSHARINGLEVEL = 13
      TRACKSHARINGLEVEL = 14
      ALBUMSHARINGLEVEL = 15
      USERNAME = 16
      ALLOWOFFLINEUNTIL = 17
      REGISTRATIONTYPE = 18
      FACEBOOKUID = 19
      SUBSCRIPTIONTYPE = 20
      HASPREMIUMACCESS = 21
      ENABLEFACEBOOKSCROBBLING = 22
      HIGHESTAUDIOENCODING = 23
      LASTUPDATEDFAVARTIST = 24
      LASTUPDATEDFAVTRACK = 25
      LASTUPDATEDFAVALBUM = 26
      LASTUPDATEDFAVPLAYLIST = 27
      LASTUPDATEDLIBRARYPLAYLISTS = 28
      PARTNERID = 29

      FIELDS = {
        PROFILEID => {:type => ::Thrift::Types::I32, :name => 'profileId'},
        USERID => {:type => ::Thrift::Types::I32, :name => 'userId'},
        PHONENUMBER => {:type => ::Thrift::Types::STRING, :name => 'phoneNumber', :optional => true},
        REGISTRATIONDATE => {:type => ::Thrift::Types::I64, :name => 'registrationDate'},
        SESSIONID => {:type => ::Thrift::Types::STRING, :name => 'sessionId'},
        MOBILEOPERATOR => {:type => ::Thrift::Types::STRING, :name => 'mobileOperator', :optional => true},
        SUBSCRIPTIONSTATUS => {:type => ::Thrift::Types::STRING, :name => 'subscriptionStatus'},
        CHANNELID => {:type => ::Thrift::Types::I32, :name => 'channelId'},
        CLIENTAUTHORIZEDFOROFFLINECONTENT => {:type => ::Thrift::Types::BOOL, :name => 'clientAuthorizedForOfflineContent'},
        VALIDFORSTREAMING => {:type => ::Thrift::Types::BOOL, :name => 'validForStreaming'},
        SUBSCRIPTIONENDDATE => {:type => ::Thrift::Types::I64, :name => 'subscriptionEndDate'},
        PLAYLISTSHARINGLEVEL => {:type => ::Thrift::Types::I32, :name => 'playListSharingLevel'},
        ARTISTSHARINGLEVEL => {:type => ::Thrift::Types::I32, :name => 'artistSharingLevel'},
        TRACKSHARINGLEVEL => {:type => ::Thrift::Types::I32, :name => 'trackSharingLevel'},
        ALBUMSHARINGLEVEL => {:type => ::Thrift::Types::I32, :name => 'albumSharingLevel'},
        USERNAME => {:type => ::Thrift::Types::STRING, :name => 'username'},
        ALLOWOFFLINEUNTIL => {:type => ::Thrift::Types::I64, :name => 'allowOfflineUntil'},
        REGISTRATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'registrationType'},
        FACEBOOKUID => {:type => ::Thrift::Types::I64, :name => 'facebookUid'},
        SUBSCRIPTIONTYPE => {:type => ::Thrift::Types::STRING, :name => 'subscriptionType'},
        HASPREMIUMACCESS => {:type => ::Thrift::Types::BOOL, :name => 'hasPremiumAccess'},
        ENABLEFACEBOOKSCROBBLING => {:type => ::Thrift::Types::BOOL, :name => 'enableFacebookScrobbling'},
        HIGHESTAUDIOENCODING => {:type => ::Thrift::Types::I32, :name => 'highestAudioEncoding'},
        LASTUPDATEDFAVARTIST => {:type => ::Thrift::Types::I64, :name => 'lastUpdatedFavArtist'},
        LASTUPDATEDFAVTRACK => {:type => ::Thrift::Types::I64, :name => 'lastUpdatedFavTrack'},
        LASTUPDATEDFAVALBUM => {:type => ::Thrift::Types::I64, :name => 'lastUpdatedFavAlbum'},
        LASTUPDATEDFAVPLAYLIST => {:type => ::Thrift::Types::I64, :name => 'lastUpdatedFavPlaylist'},
        LASTUPDATEDLIBRARYPLAYLISTS => {:type => ::Thrift::Types::I64, :name => 'lastUpdatedLibraryPlaylists'},
        PARTNERID => {:type => ::Thrift::Types::I32, :name => 'partnerId'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field profileId is unset!') unless @profileId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field userId is unset!') unless @userId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field registrationDate is unset!') unless @registrationDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sessionId is unset!') unless @sessionId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field subscriptionStatus is unset!') unless @subscriptionStatus
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field channelId is unset!') unless @channelId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field clientAuthorizedForOfflineContent is unset!') if @clientAuthorizedForOfflineContent.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field validForStreaming is unset!') if @validForStreaming.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field subscriptionEndDate is unset!') unless @subscriptionEndDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field playListSharingLevel is unset!') unless @playListSharingLevel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistSharingLevel is unset!') unless @artistSharingLevel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field trackSharingLevel is unset!') unless @trackSharingLevel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumSharingLevel is unset!') unless @albumSharingLevel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field username is unset!') unless @username
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field allowOfflineUntil is unset!') unless @allowOfflineUntil
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field registrationType is unset!') unless @registrationType
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field facebookUid is unset!') unless @facebookUid
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field subscriptionType is unset!') unless @subscriptionType
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field hasPremiumAccess is unset!') if @hasPremiumAccess.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field enableFacebookScrobbling is unset!') if @enableFacebookScrobbling.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field highestAudioEncoding is unset!') unless @highestAudioEncoding
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastUpdatedFavArtist is unset!') unless @lastUpdatedFavArtist
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastUpdatedFavTrack is unset!') unless @lastUpdatedFavTrack
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastUpdatedFavAlbum is unset!') unless @lastUpdatedFavAlbum
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastUpdatedFavPlaylist is unset!') unless @lastUpdatedFavPlaylist
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastUpdatedLibraryPlaylists is unset!') unless @lastUpdatedLibraryPlaylists
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field partnerId is unset!') unless @partnerId
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Artist
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ARTISTNAME = 1
      ARTISTBIO = 2
      ARTISTID = 3
      INFO = 4
      LINK = 5

      FIELDS = {
        ARTISTNAME => {:type => ::Thrift::Types::STRING, :name => 'artistName'},
        ARTISTBIO => {:type => ::Thrift::Types::STRING, :name => 'artistBio'},
        ARTISTID => {:type => ::Thrift::Types::I32, :name => 'artistId'},
        INFO => {:type => ::Thrift::Types::STRING, :name => 'info', :optional => true},
        LINK => {:type => ::Thrift::Types::STRING, :name => 'link', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistName is unset!') unless @artistName
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistBio is unset!') unless @artistBio
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistId is unset!') unless @artistId
      end

      ::Thrift::Struct.generate_accessors self
    end

    class RecordLabel
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RECORDLABELNAME = 1
      RECORDLABELID = 2
      RECORDPROVIDER = 3
      RECORDPROVIDERID = 4
      RECORDSUBLABEL = 5
      RECORDSUBLABELID = 6

      FIELDS = {
        RECORDLABELNAME => {:type => ::Thrift::Types::STRING, :name => 'recordLabelName'},
        RECORDLABELID => {:type => ::Thrift::Types::I32, :name => 'recordLabelId'},
        RECORDPROVIDER => {:type => ::Thrift::Types::STRING, :name => 'recordProvider'},
        RECORDPROVIDERID => {:type => ::Thrift::Types::I32, :name => 'recordProviderId'},
        RECORDSUBLABEL => {:type => ::Thrift::Types::STRING, :name => 'recordSubLabel'},
        RECORDSUBLABELID => {:type => ::Thrift::Types::I32, :name => 'recordSubLabelId'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recordLabelName is unset!') unless @recordLabelName
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recordLabelId is unset!') unless @recordLabelId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recordProvider is unset!') unless @recordProvider
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recordProviderId is unset!') unless @recordProviderId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recordSubLabel is unset!') unless @recordSubLabel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recordSubLabelId is unset!') unless @recordSubLabelId
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Track
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ARTIST = 2
      ARTISTID = 3
      ALBUMID = 4
      ALBUM = 5
      COPYRIGHT = 6
      DURATION = 7
      SMALLALBUMCOVER = 8
      MEDIUMALBUMCOVER = 9
      LARGEALBUMCOVER = 10
      ID = 11
      CONTENTACCESSSTRING = 12
      VOLUMENUMBER = 13
      TRACKNUMBER = 14
      VERSION = 15
      SALESSTARTDATE = 16
      SALESREADY = 17
      STREAMREADY = 18
      PRICE = 19
      CURRENCYCODE = 20
      ALBUMONLY = 21
      ALBUMBROKEN = 22
      PRICECODE = 23
      ALBUMCALCULATEDTYPE = 24
      ALLOWSTREAMING = 25
      ALBUMNROFVOLUMES = 26
      POPULARITY = 27
      POPULARITYTHISWEEK = 28
      SEARCHSCORE = 29
      RECORDLABEL = 30
      SALESPRICERULEID = 31
      STREAMSTARTDATE = 32
      PREVIEWURL = 33
      CUSTOMIZABLEALBUMCOVER = 34
      PREMIUMONLYSTREAMING = 35
      POPULARITYLEVEL = 36
      REVISEDCOPYRIGHT = 37

      FIELDS = {
        ARTIST => {:type => ::Thrift::Types::STRING, :name => 'artist'},
        ARTISTID => {:type => ::Thrift::Types::I32, :name => 'artistId'},
        ALBUMID => {:type => ::Thrift::Types::I32, :name => 'albumId'},
        ALBUM => {:type => ::Thrift::Types::STRING, :name => 'album'},
        COPYRIGHT => {:type => ::Thrift::Types::STRING, :name => 'copyright', :optional => true},
        DURATION => {:type => ::Thrift::Types::I32, :name => 'duration'},
        SMALLALBUMCOVER => {:type => ::Thrift::Types::STRING, :name => 'smallAlbumCover', :optional => true},
        MEDIUMALBUMCOVER => {:type => ::Thrift::Types::STRING, :name => 'mediumAlbumCover', :optional => true},
        LARGEALBUMCOVER => {:type => ::Thrift::Types::STRING, :name => 'largeAlbumCover', :optional => true},
        ID => {:type => ::Thrift::Types::I32, :name => 'id'},
        CONTENTACCESSSTRING => {:type => ::Thrift::Types::STRING, :name => 'contentAccessString', :optional => true},
        VOLUMENUMBER => {:type => ::Thrift::Types::I32, :name => 'volumeNumber'},
        TRACKNUMBER => {:type => ::Thrift::Types::I32, :name => 'trackNumber'},
        VERSION => {:type => ::Thrift::Types::STRING, :name => 'version', :optional => true},
        SALESSTARTDATE => {:type => ::Thrift::Types::I64, :name => 'salesStartDate'},
        SALESREADY => {:type => ::Thrift::Types::BOOL, :name => 'salesReady'},
        STREAMREADY => {:type => ::Thrift::Types::BOOL, :name => 'streamReady'},
        PRICE => {:type => ::Thrift::Types::DOUBLE, :name => 'price'},
        CURRENCYCODE => {:type => ::Thrift::Types::STRING, :name => 'currencyCode', :optional => true},
        ALBUMONLY => {:type => ::Thrift::Types::BOOL, :name => 'albumOnly'},
        ALBUMBROKEN => {:type => ::Thrift::Types::BOOL, :name => 'albumBroken'},
        PRICECODE => {:type => ::Thrift::Types::STRING, :name => 'priceCode', :optional => true},
        ALBUMCALCULATEDTYPE => {:type => ::Thrift::Types::STRING, :name => 'albumCalculatedType'},
        ALLOWSTREAMING => {:type => ::Thrift::Types::BOOL, :name => 'allowStreaming'},
        ALBUMNROFVOLUMES => {:type => ::Thrift::Types::I32, :name => 'albumNrOfVolumes'},
        POPULARITY => {:type => ::Thrift::Types::I32, :name => 'popularity'},
        POPULARITYTHISWEEK => {:type => ::Thrift::Types::I32, :name => 'popularityThisWeek'},
        SEARCHSCORE => {:type => ::Thrift::Types::DOUBLE, :name => 'searchScore'},
        RECORDLABEL => {:type => ::Thrift::Types::STRUCT, :name => 'recordLabel', :class => ::WiMP::Gen::RecordLabel},
        SALESPRICERULEID => {:type => ::Thrift::Types::I32, :name => 'salesPriceRuleId'},
        STREAMSTARTDATE => {:type => ::Thrift::Types::I64, :name => 'streamStartDate'},
        PREVIEWURL => {:type => ::Thrift::Types::STRING, :name => 'previewURL'},
        CUSTOMIZABLEALBUMCOVER => {:type => ::Thrift::Types::STRING, :name => 'customizableAlbumCover', :optional => true},
        PREMIUMONLYSTREAMING => {:type => ::Thrift::Types::BOOL, :name => 'premiumOnlyStreaming'},
        POPULARITYLEVEL => {:type => ::Thrift::Types::I32, :name => 'popularityLevel'},
        REVISEDCOPYRIGHT => {:type => ::Thrift::Types::STRING, :name => 'revisedCopyright'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artist is unset!') unless @artist
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistId is unset!') unless @artistId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumId is unset!') unless @albumId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field album is unset!') unless @album
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field duration is unset!') unless @duration
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field id is unset!') unless @id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field volumeNumber is unset!') unless @volumeNumber
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field trackNumber is unset!') unless @trackNumber
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field salesStartDate is unset!') unless @salesStartDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field salesReady is unset!') if @salesReady.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field streamReady is unset!') if @streamReady.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field price is unset!') unless @price
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumOnly is unset!') if @albumOnly.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumBroken is unset!') if @albumBroken.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumCalculatedType is unset!') unless @albumCalculatedType
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field allowStreaming is unset!') if @allowStreaming.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumNrOfVolumes is unset!') unless @albumNrOfVolumes
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field popularity is unset!') unless @popularity
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field popularityThisWeek is unset!') unless @popularityThisWeek
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field searchScore is unset!') unless @searchScore
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recordLabel is unset!') unless @recordLabel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field salesPriceRuleId is unset!') unless @salesPriceRuleId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field streamStartDate is unset!') unless @streamStartDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field previewURL is unset!') unless @previewURL
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field premiumOnlyStreaming is unset!') if @premiumOnlyStreaming.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field popularityLevel is unset!') unless @popularityLevel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field revisedCopyright is unset!') unless @revisedCopyright
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Album
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ID = 1
      ALLOWSTREAMING = 2
      ARTIST = 3
      ARTISTID = 4
      CALCULATEDTYPE = 5
      COPYRIGHT = 6
      DURATION = 7
      GENRE = 8
      LARGEALBUMCOVER = 9
      NUMBEROFTRACKS = 10
      NUMBEROFVOLUMES = 11
      PARTIALDATA = 12
      PARTIALNROFTRACKS = 13
      RECORDLABEL = 14
      SALESSTARTDATE = 15
      STREAMREADY = 16
      TITLE = 17
      VERSION = 18
      CURRENCYCODE = 19
      DESC = 20
      DETAILS = 21
      MEDIUMALBUMCOVER = 22
      SMALLALBUMCOVER = 23
      POPULARITY = 24
      POPULARITYTHISWEEK = 25
      PRICE = 26
      PRICECODE = 27
      RELEASEDATE = 28
      RELEASEYEAR = 29
      SALESPRICERULEID = 30
      SALESREADY = 31
      SEARCHSCORE = 32
      TRACKBUNDLETYPE = 33
      TRACKONLY = 34
      STREAMSTARTDATE = 35
      CUSTOMIZABLEALBUMCOVER = 36
      BOOKLETURL = 37
      PREMIUMONLYSTREAMING = 38
      REVISEDCOPYRIGHT = 39

      FIELDS = {
        ID => {:type => ::Thrift::Types::I32, :name => 'id'},
        ALLOWSTREAMING => {:type => ::Thrift::Types::BOOL, :name => 'allowStreaming'},
        ARTIST => {:type => ::Thrift::Types::STRING, :name => 'artist'},
        ARTISTID => {:type => ::Thrift::Types::I32, :name => 'artistId'},
        CALCULATEDTYPE => {:type => ::Thrift::Types::STRING, :name => 'calculatedType'},
        COPYRIGHT => {:type => ::Thrift::Types::STRING, :name => 'copyright'},
        DURATION => {:type => ::Thrift::Types::I32, :name => 'duration'},
        GENRE => {:type => ::Thrift::Types::STRING, :name => 'genre'},
        LARGEALBUMCOVER => {:type => ::Thrift::Types::STRING, :name => 'largeAlbumCover', :optional => true},
        NUMBEROFTRACKS => {:type => ::Thrift::Types::I32, :name => 'numberOfTracks'},
        NUMBEROFVOLUMES => {:type => ::Thrift::Types::I32, :name => 'numberOfVolumes'},
        PARTIALDATA => {:type => ::Thrift::Types::BOOL, :name => 'partialData'},
        PARTIALNROFTRACKS => {:type => ::Thrift::Types::I32, :name => 'partialNrOfTracks'},
        RECORDLABEL => {:type => ::Thrift::Types::STRUCT, :name => 'recordLabel', :class => ::WiMP::Gen::RecordLabel},
        SALESSTARTDATE => {:type => ::Thrift::Types::I64, :name => 'salesStartDate'},
        STREAMREADY => {:type => ::Thrift::Types::BOOL, :name => 'streamReady'},
        TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
        VERSION => {:type => ::Thrift::Types::STRING, :name => 'version', :optional => true},
        CURRENCYCODE => {:type => ::Thrift::Types::STRING, :name => 'currencyCode', :optional => true},
        DESC => {:type => ::Thrift::Types::STRING, :name => 'desc', :optional => true},
        DETAILS => {:type => ::Thrift::Types::STRING, :name => 'details', :optional => true},
        MEDIUMALBUMCOVER => {:type => ::Thrift::Types::STRING, :name => 'mediumAlbumCover', :optional => true},
        SMALLALBUMCOVER => {:type => ::Thrift::Types::STRING, :name => 'smallAlbumCover', :optional => true},
        POPULARITY => {:type => ::Thrift::Types::I32, :name => 'popularity'},
        POPULARITYTHISWEEK => {:type => ::Thrift::Types::I32, :name => 'popularityThisWeek'},
        PRICE => {:type => ::Thrift::Types::DOUBLE, :name => 'price'},
        PRICECODE => {:type => ::Thrift::Types::STRING, :name => 'priceCode'},
        RELEASEDATE => {:type => ::Thrift::Types::I64, :name => 'releaseDate'},
        RELEASEYEAR => {:type => ::Thrift::Types::STRING, :name => 'releaseYear'},
        SALESPRICERULEID => {:type => ::Thrift::Types::I32, :name => 'salesPriceRuleId'},
        SALESREADY => {:type => ::Thrift::Types::BOOL, :name => 'salesReady'},
        SEARCHSCORE => {:type => ::Thrift::Types::DOUBLE, :name => 'searchScore'},
        TRACKBUNDLETYPE => {:type => ::Thrift::Types::STRING, :name => 'trackBundleType'},
        TRACKONLY => {:type => ::Thrift::Types::BOOL, :name => 'trackOnly'},
        STREAMSTARTDATE => {:type => ::Thrift::Types::I64, :name => 'streamStartDate'},
        CUSTOMIZABLEALBUMCOVER => {:type => ::Thrift::Types::STRING, :name => 'customizableAlbumCover', :optional => true},
        BOOKLETURL => {:type => ::Thrift::Types::STRING, :name => 'bookletURL', :optional => true},
        PREMIUMONLYSTREAMING => {:type => ::Thrift::Types::BOOL, :name => 'premiumOnlyStreaming'},
        REVISEDCOPYRIGHT => {:type => ::Thrift::Types::STRING, :name => 'revisedCopyright'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field id is unset!') unless @id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field allowStreaming is unset!') if @allowStreaming.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artist is unset!') unless @artist
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistId is unset!') unless @artistId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field calculatedType is unset!') unless @calculatedType
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field copyright is unset!') unless @copyright
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field duration is unset!') unless @duration
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field genre is unset!') unless @genre
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field numberOfTracks is unset!') unless @numberOfTracks
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field numberOfVolumes is unset!') unless @numberOfVolumes
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field partialData is unset!') if @partialData.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field partialNrOfTracks is unset!') unless @partialNrOfTracks
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recordLabel is unset!') unless @recordLabel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field salesStartDate is unset!') unless @salesStartDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field streamReady is unset!') if @streamReady.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field title is unset!') unless @title
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field popularity is unset!') unless @popularity
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field popularityThisWeek is unset!') unless @popularityThisWeek
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field price is unset!') unless @price
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field priceCode is unset!') unless @priceCode
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field releaseDate is unset!') unless @releaseDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field releaseYear is unset!') unless @releaseYear
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field salesPriceRuleId is unset!') unless @salesPriceRuleId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field salesReady is unset!') if @salesReady.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field searchScore is unset!') unless @searchScore
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field trackBundleType is unset!') unless @trackBundleType
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field trackOnly is unset!') if @trackOnly.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field streamStartDate is unset!') unless @streamStartDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field premiumOnlyStreaming is unset!') if @premiumOnlyStreaming.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field revisedCopyright is unset!') unless @revisedCopyright
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Playlist
      include ::Thrift::Struct, ::Thrift::Struct_Union
      COUNT = 1
      CREATEDBYARTISTID = 2
      DURATION = 3
      IMGPATH = 4
      LASTUPDATED = 5
      PLAYLISTNAME = 6
      PROFILEID = 7
      REGISTEREDDATE = 8
      TRACKS = 9
      UUID = 10
      TYPE = 11
      DESC = 12
      ID = 13
      CREATEDBYNICKNAME = 14

      FIELDS = {
        COUNT => {:type => ::Thrift::Types::I32, :name => 'count'},
        CREATEDBYARTISTID => {:type => ::Thrift::Types::I32, :name => 'createdByArtistId'},
        DURATION => {:type => ::Thrift::Types::I32, :name => 'duration'},
        IMGPATH => {:type => ::Thrift::Types::STRING, :name => 'imgPath', :optional => true},
        LASTUPDATED => {:type => ::Thrift::Types::I64, :name => 'lastUpdated'},
        PLAYLISTNAME => {:type => ::Thrift::Types::STRING, :name => 'playlistName'},
        PROFILEID => {:type => ::Thrift::Types::I32, :name => 'profileId'},
        REGISTEREDDATE => {:type => ::Thrift::Types::I64, :name => 'registeredDate'},
        TRACKS => {:type => ::Thrift::Types::LIST, :name => 'tracks', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::Track}, :optional => true},
        UUID => {:type => ::Thrift::Types::STRING, :name => 'uuid'},
        TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :optional => true},
        DESC => {:type => ::Thrift::Types::STRING, :name => 'desc', :optional => true},
        ID => {:type => ::Thrift::Types::I32, :name => 'id'},
        CREATEDBYNICKNAME => {:type => ::Thrift::Types::STRING, :name => 'createdByNickName', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field count is unset!') unless @count
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field createdByArtistId is unset!') unless @createdByArtistId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field duration is unset!') unless @duration
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastUpdated is unset!') unless @lastUpdated
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field playlistName is unset!') unless @playlistName
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field profileId is unset!') unless @profileId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field registeredDate is unset!') unless @registeredDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field uuid is unset!') unless @uuid
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field id is unset!') unless @id
      end

      ::Thrift::Struct.generate_accessors self
    end

    class SearchResult
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ARTISTS = 1
      TRACKS = 2
      ALBUMS = 3
      PLAYLIST = 4

      FIELDS = {
        ARTISTS => {:type => ::Thrift::Types::LIST, :name => 'artists', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::Artist}, :optional => true},
        TRACKS => {:type => ::Thrift::Types::LIST, :name => 'tracks', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::Track}, :optional => true},
        ALBUMS => {:type => ::Thrift::Types::LIST, :name => 'albums', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::Album}, :optional => true},
        PLAYLIST => {:type => ::Thrift::Types::LIST, :name => 'playlist', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::Playlist}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class AlbumReview
      include ::Thrift::Struct, ::Thrift::Struct_Union
      REVIEW = 1
      SUMMARY = 2
      SOURCENAME = 3

      FIELDS = {
        REVIEW => {:type => ::Thrift::Types::STRING, :name => 'review'},
        SUMMARY => {:type => ::Thrift::Types::STRING, :name => 'summary'},
        SOURCENAME => {:type => ::Thrift::Types::STRING, :name => 'sourceName'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field review is unset!') unless @review
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field summary is unset!') unless @summary
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceName is unset!') unless @sourceName
      end

      ::Thrift::Struct.generate_accessors self
    end

    class SimilarAlbum
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ALBUMID = 1
      TITLE = 2
      ARTISTNAME = 3
      ARTISTID = 4

      FIELDS = {
        ALBUMID => {:type => ::Thrift::Types::I32, :name => 'albumId'},
        TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
        ARTISTNAME => {:type => ::Thrift::Types::STRING, :name => 'artistName'},
        ARTISTID => {:type => ::Thrift::Types::I32, :name => 'artistId'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumId is unset!') unless @albumId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field title is unset!') unless @title
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistName is unset!') unless @artistName
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistId is unset!') unless @artistId
      end

      ::Thrift::Struct.generate_accessors self
    end

    class SimilarAlbumList
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SIMILARALBUMS = 1
      SOURCENAME = 2

      FIELDS = {
        SIMILARALBUMS => {:type => ::Thrift::Types::LIST, :name => 'similarAlbums', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::SimilarAlbum}},
        SOURCENAME => {:type => ::Thrift::Types::STRING, :name => 'sourceName'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field similarAlbums is unset!') unless @similarAlbums
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceName is unset!') unless @sourceName
      end

      ::Thrift::Struct.generate_accessors self
    end

    class AlbumMetadata
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ALBUMID = 1
      TITLE = 2
      ARTISTID = 3
      ALBUMREVIEW = 4
      SIMILARALBUMLIST = 5

      FIELDS = {
        ALBUMID => {:type => ::Thrift::Types::I32, :name => 'albumId'},
        TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
        ARTISTID => {:type => ::Thrift::Types::I32, :name => 'artistId'},
        ALBUMREVIEW => {:type => ::Thrift::Types::STRUCT, :name => 'albumReview', :class => ::WiMP::Gen::AlbumReview},
        SIMILARALBUMLIST => {:type => ::Thrift::Types::STRUCT, :name => 'similarAlbumList', :class => ::WiMP::Gen::SimilarAlbumList}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumId is unset!') unless @albumId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field title is unset!') unless @title
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistId is unset!') unless @artistId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albumReview is unset!') unless @albumReview
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field similarAlbumList is unset!') unless @similarAlbumList
      end

      ::Thrift::Struct.generate_accessors self
    end

    class SimilarArtist
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ARTISTID = 1
      ARTISTNAME = 2

      FIELDS = {
        ARTISTID => {:type => ::Thrift::Types::I32, :name => 'artistId'},
        ARTISTNAME => {:type => ::Thrift::Types::STRING, :name => 'artistName'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistId is unset!') unless @artistId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistName is unset!') unless @artistName
      end

      ::Thrift::Struct.generate_accessors self
    end

    class SimilarArtistList
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SIMILARARTISTLIST = 1
      SOURCENAME = 2

      FIELDS = {
        SIMILARARTISTLIST => {:type => ::Thrift::Types::LIST, :name => 'similarArtistList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::SimilarArtist}},
        SOURCENAME => {:type => ::Thrift::Types::STRING, :name => 'sourceName'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field similarArtistList is unset!') unless @similarArtistList
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceName is unset!') unless @sourceName
      end

      ::Thrift::Struct.generate_accessors self
    end

    class RelatedArtist
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ARTISTID = 1
      ARTISTNAME = 2
      RELATIONTYPE = 3

      FIELDS = {
        ARTISTID => {:type => ::Thrift::Types::I32, :name => 'artistId'},
        ARTISTNAME => {:type => ::Thrift::Types::STRING, :name => 'artistName'},
        RELATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'relationType'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistId is unset!') unless @artistId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistName is unset!') unless @artistName
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field relationType is unset!') unless @relationType
      end

      ::Thrift::Struct.generate_accessors self
    end

    class RelatedArtistList
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RELATEDARTISTLIST = 1
      SOURCENAME = 2

      FIELDS = {
        RELATEDARTISTLIST => {:type => ::Thrift::Types::LIST, :name => 'relatedArtistList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::RelatedArtist}},
        SOURCENAME => {:type => ::Thrift::Types::STRING, :name => 'sourceName'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field relatedArtistList is unset!') unless @relatedArtistList
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceName is unset!') unless @sourceName
      end

      ::Thrift::Struct.generate_accessors self
    end

    class ArtistLink
      include ::Thrift::Struct, ::Thrift::Struct_Union
      URL = 1

      FIELDS = {
        URL => {:type => ::Thrift::Types::STRING, :name => 'url'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field url is unset!') unless @url
      end

      ::Thrift::Struct.generate_accessors self
    end

    class ArtistLinkList
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ARTISTLINKS = 1
      SOURCENAME = 2

      FIELDS = {
        ARTISTLINKS => {:type => ::Thrift::Types::LIST, :name => 'artistLinks', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::ArtistLink}},
        SOURCENAME => {:type => ::Thrift::Types::STRING, :name => 'sourceName'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistLinks is unset!') unless @artistLinks
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceName is unset!') unless @sourceName
      end

      ::Thrift::Struct.generate_accessors self
    end

    class ArtistBiography
      include ::Thrift::Struct, ::Thrift::Struct_Union
      BIOGRAPHYSUMMARY = 1
      BIOGRAPHY = 2
      SOURCENAME = 3

      FIELDS = {
        BIOGRAPHYSUMMARY => {:type => ::Thrift::Types::STRING, :name => 'biographySummary'},
        BIOGRAPHY => {:type => ::Thrift::Types::STRING, :name => 'biography'},
        SOURCENAME => {:type => ::Thrift::Types::STRING, :name => 'sourceName'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field biographySummary is unset!') unless @biographySummary
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field biography is unset!') unless @biography
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sourceName is unset!') unless @sourceName
      end

      ::Thrift::Struct.generate_accessors self
    end

    class ArtistMetaData
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ARTISTID = 1
      ARTISTNAME = 2
      ARTISTBIOGRAPHY = 3
      SIMILARARTISTS = 4
      RELATEDARTISTS = 5
      ARTISTLINKS = 6

      FIELDS = {
        ARTISTID => {:type => ::Thrift::Types::I32, :name => 'artistId'},
        ARTISTNAME => {:type => ::Thrift::Types::STRING, :name => 'artistName'},
        ARTISTBIOGRAPHY => {:type => ::Thrift::Types::STRUCT, :name => 'artistBiography', :class => ::WiMP::Gen::ArtistBiography},
        SIMILARARTISTS => {:type => ::Thrift::Types::STRUCT, :name => 'similarArtists', :class => ::WiMP::Gen::SimilarArtistList},
        RELATEDARTISTS => {:type => ::Thrift::Types::STRUCT, :name => 'relatedArtists', :class => ::WiMP::Gen::RelatedArtistList},
        ARTISTLINKS => {:type => ::Thrift::Types::STRUCT, :name => 'artistLinks', :class => ::WiMP::Gen::ArtistLinkList}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistId is unset!') unless @artistId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistName is unset!') unless @artistName
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistBiography is unset!') unless @artistBiography
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field similarArtists is unset!') unless @similarArtists
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field relatedArtists is unset!') unless @relatedArtists
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artistLinks is unset!') unless @artistLinks
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Category
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ID = 1
      NAME = 2
      LASTUPDATED = 8
      CONTENTTYPE = 9
      DESC = 10
      HASPRODUCTDESCRIPTIONS = 11
      IMAGEURL = 12

      FIELDS = {
        ID => {:type => ::Thrift::Types::I32, :name => 'id'},
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
        LASTUPDATED => {:type => ::Thrift::Types::I64, :name => 'lastUpdated'},
        CONTENTTYPE => {:type => ::Thrift::Types::I32, :name => 'contentType'},
        DESC => {:type => ::Thrift::Types::STRING, :name => 'desc', :optional => true},
        HASPRODUCTDESCRIPTIONS => {:type => ::Thrift::Types::BOOL, :name => 'hasProductDescriptions'},
        IMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'imageURL', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field id is unset!') unless @id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastUpdated is unset!') unless @lastUpdated
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field contentType is unset!') unless @contentType
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field hasProductDescriptions is unset!') if @hasProductDescriptions.nil?
      end

      ::Thrift::Struct.generate_accessors self
    end

    class CategoryTree
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CATEGORY = 1
      CHILDREN = 2

      FIELDS = {
        CATEGORY => {:type => ::Thrift::Types::STRUCT, :name => 'category', :class => ::WiMP::Gen::Category, :optional => true},
        CHILDREN => {:type => ::Thrift::Types::MAP, :name => 'children', :key => {:type => ::Thrift::Types::I32}, :value => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::Category}}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class FavoriteAlbum
      include ::Thrift::Struct, ::Thrift::Struct_Union
      DATEADDED = 1
      ALBUM = 2
      PROFILEID = 3

      FIELDS = {
        DATEADDED => {:type => ::Thrift::Types::I32, :name => 'dateAdded', :optional => true},
        ALBUM => {:type => ::Thrift::Types::STRUCT, :name => 'album', :class => ::WiMP::Gen::Album},
        PROFILEID => {:type => ::Thrift::Types::I32, :name => 'profileId'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field album is unset!') unless @album
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field profileId is unset!') unless @profileId
      end

      ::Thrift::Struct.generate_accessors self
    end

    class FavoriteArtist
      include ::Thrift::Struct, ::Thrift::Struct_Union
      DATEADDED = 1
      ARTIST = 2
      ALBUMS = 3
      PROFILEID = 4

      FIELDS = {
        DATEADDED => {:type => ::Thrift::Types::I64, :name => 'dateAdded'},
        ARTIST => {:type => ::Thrift::Types::STRUCT, :name => 'artist', :class => ::WiMP::Gen::Artist},
        ALBUMS => {:type => ::Thrift::Types::LIST, :name => 'albums', :element => {:type => ::Thrift::Types::STRUCT, :class => ::WiMP::Gen::Album}},
        PROFILEID => {:type => ::Thrift::Types::I32, :name => 'profileId'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field dateAdded is unset!') unless @dateAdded
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artist is unset!') unless @artist
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field albums is unset!') unless @albums
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field profileId is unset!') unless @profileId
      end

      ::Thrift::Struct.generate_accessors self
    end

    class FavoritePlaylist
      include ::Thrift::Struct, ::Thrift::Struct_Union
      DATEADDED = 1
      PLAYLIST = 2
      PROFILEID = 3

      FIELDS = {
        DATEADDED => {:type => ::Thrift::Types::I64, :name => 'dateAdded'},
        PLAYLIST => {:type => ::Thrift::Types::STRUCT, :name => 'playlist', :class => ::WiMP::Gen::Playlist},
        PROFILEID => {:type => ::Thrift::Types::I32, :name => 'profileId'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field dateAdded is unset!') unless @dateAdded
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field playlist is unset!') unless @playlist
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field profileId is unset!') unless @profileId
      end

      ::Thrift::Struct.generate_accessors self
    end

    class FavoriteTrack
      include ::Thrift::Struct, ::Thrift::Struct_Union
      DATEADDED = 1
      TRACK = 2
      PROFILEID = 3

      FIELDS = {
        DATEADDED => {:type => ::Thrift::Types::I64, :name => 'dateAdded'},
        TRACK => {:type => ::Thrift::Types::STRUCT, :name => 'track', :class => ::WiMP::Gen::Track},
        PROFILEID => {:type => ::Thrift::Types::I32, :name => 'profileId'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field dateAdded is unset!') unless @dateAdded
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field track is unset!') unless @track
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field profileId is unset!') unless @profileId
      end

      ::Thrift::Struct.generate_accessors self
    end

    class WallPost
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ID = 1
      PROFILEID = 2
      POSTDATE = 3
      ACTION = 4
      ARTIFACTID = 5
      ARTIFACTTITLE = 6
      ARTIFACTPARENTTITLE = 7

      FIELDS = {
        ID => {:type => ::Thrift::Types::I32, :name => 'id'},
        PROFILEID => {:type => ::Thrift::Types::I32, :name => 'profileId'},
        POSTDATE => {:type => ::Thrift::Types::I64, :name => 'postDate'},
        ACTION => {:type => ::Thrift::Types::I32, :name => 'action'},
        ARTIFACTID => {:type => ::Thrift::Types::STRING, :name => 'artifactId'},
        ARTIFACTTITLE => {:type => ::Thrift::Types::STRING, :name => 'artifactTitle'},
        ARTIFACTPARENTTITLE => {:type => ::Thrift::Types::STRING, :name => 'artifactParentTitle', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field id is unset!') unless @id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field profileId is unset!') unless @profileId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field postDate is unset!') unless @postDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field action is unset!') unless @action
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artifactId is unset!') unless @artifactId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field artifactTitle is unset!') unless @artifactTitle
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Friend
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ID = 1
      LASTUPDATEDFAVOURITES = 2
      FACEBOOKUID = 3
      MADEFRIENDDATE = 4
      LASTVISITEDFRIENDDATE = 5
      BLOCKED = 6
      FRIENDTYPE = 7
      NICK = 8
      FRIENDPROFILEID = 9
      NROFSHAREDALBUMS = 10
      NROFSHAREDTRACKS = 11
      NROFSHAREDPLAYLISTS = 12
      NROFSHAREDARTISTS = 13

      FIELDS = {
        ID => {:type => ::Thrift::Types::I32, :name => 'id'},
        LASTUPDATEDFAVOURITES => {:type => ::Thrift::Types::I64, :name => 'lastUpdatedFavourites'},
        FACEBOOKUID => {:type => ::Thrift::Types::I64, :name => 'facebookUid'},
        MADEFRIENDDATE => {:type => ::Thrift::Types::I64, :name => 'madeFriendDate'},
        LASTVISITEDFRIENDDATE => {:type => ::Thrift::Types::I64, :name => 'lastVisitedFriendDate'},
        BLOCKED => {:type => ::Thrift::Types::BOOL, :name => 'blocked'},
        FRIENDTYPE => {:type => ::Thrift::Types::STRING, :name => 'friendType'},
        NICK => {:type => ::Thrift::Types::STRING, :name => 'nick'},
        FRIENDPROFILEID => {:type => ::Thrift::Types::I32, :name => 'friendProfileId'},
        NROFSHAREDALBUMS => {:type => ::Thrift::Types::I32, :name => 'nrOfSharedAlbums'},
        NROFSHAREDTRACKS => {:type => ::Thrift::Types::I32, :name => 'nrOfSharedTracks'},
        NROFSHAREDPLAYLISTS => {:type => ::Thrift::Types::I32, :name => 'nrOfSharedPlayLists'},
        NROFSHAREDARTISTS => {:type => ::Thrift::Types::I32, :name => 'nrOfSharedArtists'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field id is unset!') unless @id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastUpdatedFavourites is unset!') unless @lastUpdatedFavourites
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field facebookUid is unset!') unless @facebookUid
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field madeFriendDate is unset!') unless @madeFriendDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastVisitedFriendDate is unset!') unless @lastVisitedFriendDate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field blocked is unset!') if @blocked.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field friendType is unset!') unless @friendType
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field nick is unset!') unless @nick
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field friendProfileId is unset!') unless @friendProfileId
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field nrOfSharedAlbums is unset!') unless @nrOfSharedAlbums
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field nrOfSharedTracks is unset!') unless @nrOfSharedTracks
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field nrOfSharedPlayLists is unset!') unless @nrOfSharedPlayLists
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field nrOfSharedArtists is unset!') unless @nrOfSharedArtists
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
